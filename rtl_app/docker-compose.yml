version: "3.9"
services:
  #sudo sysctl -w vm.max_map_count=262144
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      # - xpack.ml.enabled=false
      - discovery.type=single-node
      - logger.level=WARN
      - xpack.security.enabled=false
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data:rw
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - mynetwork
    # logging:
    #   driver: none 


  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.10.2'
    container_name: kibana
    environment:
      SERVER_NAME: kibana.local
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch 
    ports:
      - '5601:5601'
    networks:
      - mynetwork
    logging:
      driver: none

  dotnet_mysql:
    image: mysql:5.7
    volumes:
      - dotnet-mysql-data:/var/lib/mysql
    networks:
      - mynetwork
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: rtl_hangfire
      MYSQL_USER: rtl
      MYSQL_PASSWORD: rtl
    logging:
      driver: none

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
      - UPLOAD_LIMIT=10M
    networks:
      - mynetwork 
    logging:
      driver: none     

  postgresserver:
    image: postgres
    command: -c shared_buffers=256MB -c max_connections=200
    ports:
      - 5432:5432
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork
    logging:
      driver: none

  pgadmin:
    image: dpage/pgadmin4:4.18
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ad.min
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '8081:80'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - "postgresserver"
    networks:
      - mynetwork
    logging:
      driver: none

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    expose:
      - "6379"
    networks:
      - mynetwork

  backend:
    build: 
      context: .
      dockerfile: Docker/Dockerfile.Dotnet
    expose: 
      - "5000"
    depends_on:
      - "postgresserver"
      - "dotnet_mysql"
      - "elasticsearch"
    networks:
      - mynetwork
    user: ${CURRENT_UID}

  frontend:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    ports:
      - "4000:4000"
    networks:
      - mynetwork

volumes:
  dotnet-mysql-data:
  elasticsearch-data:  
  pgdata:
  pgadmin-data:

networks:
  mynetwork:
    name: rtl-network
    driver: bridge